name: Terraform


on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
jobs:
  terraform:
    runs-on: ubuntu-latest

    outputs:
      vm_ip: ${{ steps.output_vm_ip.outputs.vm_ip }}
      ssh_user: ${{ steps.output_ssh_user.outputs.ssh_user }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Create terraform.tfvars from secrets
        working-directory: ./infra
        run: |
          cat > terraform.tfvars <<EOF
          cloud_id = "${{ secrets.CLOUD_ID }}"
          folder_id = "${{ secrets.FOLDER_ID }}"
          ssh_key = "${{ secrets.SSH_KEY_PUB }}"
          EOF

      - name: Set up Yandex Cloud service account key
        working-directory: ./infra
        run: |
          echo "${{ secrets.YC_KEY_JSON }}" | base64 -d > ./authorized_key.json

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      
      - name: Terraform Plan
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Terraform Apply
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Terraform Destroy
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Get VM IP output
        id: output_vm_ip
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'apply' }}
        shell: bash
        run: |
          IP=$(terraform output -raw vm_ip | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | tr -d '\r')
          printf "vm_ip=%s\n" "$IP" >> "$GITHUB_OUTPUT"

      - name: Get SSH User output
        id: output_ssh_user
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          SSH_USER=$(terraform output -raw ssh_user | tr -d '\r\n')
          echo "ssh_user=$SSH_USER" >> $GITHUB_OUTPUT
  
  deploy:
    if: ${{ github.event.inputs.action == 'apply' }}
    needs: terraform
    uses: ./.github/workflows/deploy.yml
    with:
      host: ${{ needs.terraform.outputs.vm_ip }}
      user: ${{ needs.terraform.outputs.ssh_user }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
